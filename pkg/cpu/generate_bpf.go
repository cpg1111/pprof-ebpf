//+build ignore

package main

import (
	"fmt"
	"io"
	"io/ioutil"
	"os"

	"github.com/cpg1111/pprof-ebpf/pkg/srcfmt"
)

const (
	org  = "cpg1111"
	repo = "pprof-ebpf"
	tmpl = "//AUTOGENERATED by generate_bpf.go\npackage cpu\n\nconst bpfSRC = `\n{{ .SRC }}`\n"
)

type code struct {
	SRC string
}

func main() {
	gopath := os.Getenv("GOPATH")
	cSRCPath := fmt.Sprintf("%s/src/github.com/%s/%s/pkg/cpu/c/profile.c", gopath, org, repo)
	goDestPath := fmt.Sprintf("%s/src/github.com/%s/%s/pkg/cpu/bpf.go", gopath, org, repo)
	f, err := os.Open(cSRCPath)
	if err != nil {
		panic(err)
	}
	defer f.Close()
	b, err := ioutil.ReadAll(f)
	if err != nil {
		panic(err)
	}
	c := &code{SRC: string(b)}
	buf, err := srcfmt.ProcessSrc(tmpl, c)
	if err != nil {
		panic(err)
	}
	dest, err := os.OpenFile(goDestPath, os.O_RDWR|os.O_CREATE, 0644)
	if err != nil {
		panic(err)
	}
	defer dest.Close()
	_, err = io.Copy(dest, buf)
	if err != nil {
		panic(err)
	}
}
